plugins {
    id 'java'
    id 'groovy'
    id 'com.palantir.git-version'
    id 'com.coditory.integration-test'
}

apply from: 'gradle/versioning.gradle'

// TODO: put correct name here
group = 'com.julesn.ss.tools'
description = 'Various tools for SingleSystem application'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // groovy
    implementation "org.codehaus.groovy:groovy-all:${project['groovy.version']}"
    implementation "org.apache.ivy:ivy:${project['ivy.version']}"
    implementation "io.vertx:vertx-core:${project['vertx.version']}"
    implementation "io.vertx:vertx-web-client:${project['vertx.version']}"


    // cli
    implementation "info.picocli:picocli:${project['picocli.version']}"

    // testing (junit 5 + mockito + assertj)
    testImplementation "org.junit.jupiter:junit-jupiter-api:${project['junit.version']}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${project['junit.version']}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${project['junit.version']}"
    testImplementation "org.mockito:mockito-core:${project['mockito.version']}"
    testImplementation "org.assertj:assertj-core:${project['assertj.version']}"
    integrationImplementation "org.testcontainers:junit-jupiter:${project['testcontainers.version']}"
}

tasks.withType(GroovyCompile) {
    groovyClasspath += configurations.runtimeClasspath
}

wrapper {
    gradleVersion = project['gradle.version']
    distributionType = 'ALL'
}

tasks.withType(Test) {
    useJUnitPlatform()
}
